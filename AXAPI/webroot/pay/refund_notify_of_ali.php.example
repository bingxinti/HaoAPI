<?php
/*
 * 支付宝服务器异步通知页面
 * https://doc.open.alipay.com/doc2/detail.htm?spm=a219a.7629140.0.0.JKEEy2&treeId=66&articleId=103601&docType=1
 */
	date_default_timezone_set ( 'PRC' );

    //加载配置文件
    require_once(__dir__.'/../../config.php');

    //数据库操作工具
    require_once(AXAPI_ROOT_PATH.'/lib/DBTool/DBModel.php');

    //加载基础方法
    require_once(AXAPI_ROOT_PATH.'/components/Utility.php');

// 计算得出通知验证结果
$verify_result = W2PayAli::getSignVeryfy();

if ($verify_result) { // 验证成功

	$tmpLog ['verify_result'] = 'success';
	// 获取支付宝的通知返回参数，可参考技术文档中服务器异步通知参数列表

	//批次号
	$batch_no = $_REQUEST['batch_no'];

	//批量退款数据中转账成功的笔数
	$success_num = $_REQUEST['success_num'];

	//批量退款数据中的详细信息
	/*
退款结果明细：多个结果用'#'隔开
退手续费结果返回格式：交易号^退款金额^处理结果$退费账号^退费账户ID^退费金额^处理结果；
不退手续费结果返回格式：交易号^退款金额^处理结果。
若退款申请提交成功，处理结果会返回“SUCCESS”。若提交失败，退款的处理结果中会有报错码，参见即时到账批量退款业务错误码。
	 */
	$result_details = $_REQUEST['result_details'];

	foreach (explode('#',$result_details) as $detail) {
		if (strpos($detail,'$')!==false)
		{
			list($detail,$accountInfo) = explode('$',$detail);
		}
		list($trade_no,$refund_fee,$refund_status) = explode('^',$detail);
		// if (isset($accountInfo))
		// {
		// 	list($account_name,$account_uid,$account_fee,$account_status) = explode('^',$accountInfo);
		// }
		if ($refund_status == 'SUCCESS')
		{
			$out_trade_no = PayOrderAliLogHandler::selectField('out_trade_no',array('trade_no'=>$trade_no));
			$AXAPI_PROJECT_NAME  = substr($out_trade_no,0,strlen(AXAPI_PROJECT_NAME));
			$AXAPI_DEPLOY_STATUS = substr($out_trade_no,strlen(AXAPI_PROJECT_NAME),strlen(AXAPI_DEPLOY_STATUS));
			$serveOrderID        = substr($out_trade_no,strlen(AXAPI_PROJECT_NAME)+strlen(AXAPI_DEPLOY_STATUS));
			$tmpLog ['verify_result']                     = 'debug1';
			if ($AXAPI_PROJECT_NAME == AXAPI_PROJECT_NAME && $AXAPI_DEPLOY_STATUS==AXAPI_DEPLOY_STATUS)
			{
				// ///////////////////////////////////////////////////////////////////////
				//         todo          此处实现退款成功后的业务逻辑
				// $serveOrderModel = ServeOrderHandler::loadModelById($serveOrderID);
				// $serveOrderModel->setOrderStatus(ORDER_STATUS::REFUND_COMPLETE);
				// $serveOrderModel->setPayStatus(PAY_STATUS::REFUND_COMPLETE);
				// ServeOrderController::$IGNORE_METHOD_CHECK    = true;
				// ServeOrderLogController::$IGNORE_METHOD_CHECK = true;
				// ServeOrderController::save($serveOrderModel);
				// $tmpLog ['verify_result']                     = 'update';
				// ///////////////////////////////////////////////////////////////////////
			}
		}
	}

	echo "success"; // 请不要修改或删除
} else {
	// 验证失败
	echo "fail";
	$tmpLog ['verify_result'] = 'fail';
}

//记录回调被访问日志
$tmpLog ['ip']         = $_SERVER ['REMOTE_ADDR'];
$tmpLog ['user_agent'] = $_SERVER ['HTTP_USER_AGENT'];
$logKeyArray = array('notify_type','notify_id','sign_type','sign','batch_no','success_num','result_details','notify_time');
foreach ($logKeyArray as $logKey) {
	if (array_key_exists($logKey,$_REQUEST))
	{
		$tmpLog[$logKey] = $_REQUEST[$logKey];
	}
}
$tmpLog['create_time'] = date('Y-m-d H:i:s') ;
DBModel::instance('payRefundAliLog')->insert($tmpLog);
